name: CI
on: push

env:
  CARGO_TERM_COLOR: always

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Node.js setup
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - uses: c-hive/gha-yarn-cache@v1
        name: Yarn Cache

      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v1
        name: Rust Cache
        with:
          working-directory: ./src-tauri

      - name: Install webkit2gtk and libasound2-dev (Ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libasound2-dev
                
      - name: Install JS dependencies
        run: yarn

      - name: Build Javascript
        run: yarn build

      - uses: tauri-apps/tauri-action@v0
        name: Build App
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        name: Upload MacOS app
        if: matrix.platform == 'macos-latest'
        with:
          name: MacOS-APP
          path: /Users/runner/work/Rust-Cue/Rust-Cue/src-tauri/target/release/bundle/macos/*.app

      - uses: actions/upload-artifact@v2
        name: Upload MacOS dmg
        if: matrix.platform == 'macos-latest'
        with:
          name: MacOS-DMG
          path: /Users/runner/work/Rust-Cue/Rust-Cue/src-tauri/target/release/bundle/dmg/*.dmg

      - uses: actions/upload-artifact@v2
        name: Upload Linux deb
        if: matrix.platform == 'ubuntu-latest'
        with:
          name: Linux-DEB
          path: /home/runner/work/Rust-Cue/Rust-Cue/src-tauri/target/release/bundle/deb/*.deb
              
      - uses: actions/upload-artifact@v2
        name: Upload Linux AppImage
        if: matrix.platform == 'ubuntu-latest'
        with:
          name: Linux-AppImage
          path: |
            /home/runner/work/Rust-Cue/Rust-Cue/src-tauri/target/release/bundle/appimage/*.AppImage
            !/home/runner/work/Rust-Cue/Rust-Cue/src-tauri/target/release/bundle/appimage/linux*.AppImage

      - uses: actions/upload-artifact@v2
        name: Upload Windows msi
        if: matrix.platform == 'windows-latest'
        with:
          name: Windows-MSI
          path: D:\a\Rust-Cue\Rust-Cue\src-tauri\target\release\bundle/msi/*.msi
                
